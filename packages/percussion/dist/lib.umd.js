(function(i,t){typeof exports=="object"&&typeof module!="undefined"?t(exports):typeof define=="function"&&define.amd?define(["exports"],t):(i=typeof globalThis!="undefined"?globalThis:i||self,t((i[""]=i[""]||{},i[""].humPercussion={})))})(this,function(i){"use strict";const t=new AudioContext,G=.02;let s=0,f=0,p=125;const o=[],T=[],v=[[1e4,.1,.1,.01,1,250,.1,.005,.01,.3],[2500,.1,.1,.1,1,250,.1,.1,.01,1],[0,0,0,.01,0,250,.2,.2,1e-4,1]],V=e=>new Promise(a=>setTimeout(a,e)),b=async e=>{const a=await e.arrayBuffer(),u=(await t.decodeAudioData(a)).getChannelData(0);L(u)};function F(){let e=0;for(let a=0;a<f;a++){for(let c=1;c<s;c++)o[a][c]==1&&e==1||o[a][c]==1&&e==0&&(e=1);e=0}}function k(){const e=new Array(s).fill(0);T.push(v[o.length]),o.push(e),f++}function M(e){o.splice(e,1),T.splice(e,1),f--}function q(){for(let e=0;e<o.length;e++)o[e].push(0);s++}function P(){for(let e=0;e<o.length;e++)o[e].pop();s--}function j(e){o[e].unshift(0),o[e].pop()}function C(e){o[e].shift(),o[e].push(0)}let g=!1;async function H(){for(g=!0;g;)for(let e=0;e<s&&g;e++)await V(p),O(e)}function K(){g=!1}function m(e){const a=e[0],c=e[1],u=e[2],h=e[3],r=e[4],n=e[5],l=e[6],A=e[7],Q=e[8],U=e[9],D=t.createBiquadFilter();D.type="highpass",D.frequency.value=a,D.connect(B);const d=t.createBufferSource();d.buffer=w;const R=t.createGain();R.gain.setValueAtTime(r,t.currentTime),R.gain.exponentialRampToValueAtTime(h,t.currentTime+c),d.connect(R),d.connect(D),d.start(),d.stop(t.currentTime+u);const y=t.createOscillator();y.type="square",y.frequency.setValueAtTime(n,t.currentTime);const S=t.createGain();S.gain.setValueAtTime(U,t.currentTime),S.gain.exponentialRampToValueAtTime(Q,t.currentTime+l),y.connect(S),S.connect(B),y.start(),y.stop(t.currentTime+A)}function L(e){const a=e.length,c=[];for(let n=0;n<a;n++)if(e[n]>G){const l=n;for(c.push(n),n=l;n<l+5e3;n++);}const u=[];for(let n=0;n<c.length-1;n++)u.push(c[n+1]-c[n]);const h=Math.min.apply(null,u)/(t.sampleRate/1e3);h<p&&f>0?(N(h),p=h):f==0&&(p=h);const r=[];for(let n=0;n<c.length-1;n++){r.push(1);const l=parseInt((u[n]/(p*(t.sampleRate/1e3))).toFixed());for(let A=0;A<l-1;A++)r.push(0)}if(r.length>s){for(let n=0;n<r.length-s;n++)for(let l=0;l<f;l++)o[l].push(0);s=r.length}else if(r.length<s){const n=s-r.length;for(let l=0;l<n;l++)r.push(0)}T.push(v[o.length]),o.push(r),f=o.length,F()}function N(e){const a=parseInt((p/e).toFixed());for(let c=0;c<f;c++)for(let u=s;u>0;u--)for(let h=0;h<a-1;h++)o[c].splice(u,0,0);s=o[0].length}async function O(e){for(let a=0;a<f;a++)o[a][e]!=0&&m(T[a])}const w=t.createBuffer(1,t.sampleRate*1,t.sampleRate),_=w.getChannelData(0);for(let e=0;e<w.length;e++)_[e]=Math.random()*2-1;const B=t.createGain();B.gain.setValueAtTime(.05,0),B.connect(t.destination);const z=[2500,.1,.1,.1,1,250,.1,.1,.01,1];function E(){m(z)}function I(){m([0,0,0,.01,0,250,.2,.2,1e-4,1])}function J(){m([1e4,.1,.1,.01,1,250,.1,.005,.01,.3])}i.addBeat=q,i.addDrum=k,i.drumArrays=o,i.getDrumBPM=F,i.inputAudioFile=b,i.pauseTrack=K,i.playHiHat=J,i.playKick=I,i.playSnare=E,i.playSound=m,i.playTrack=H,i.removeBeat=P,i.removeDrum=M,i.shiftLeft=C,i.shiftRight=j,Object.defineProperty(i,"__esModule",{value:!0}),i[Symbol.toStringTag]="Module"});
